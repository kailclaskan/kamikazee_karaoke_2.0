<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/kailc/Downloads/Ex_Files_SQL_EssT (1)/Ex_Files_SQL_EssT/Exercise Files/WSDA_Music.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="0"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="3930"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="2" parent="0"/><expanded_item id="5" parent="0"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,20:mainV_Tracks_InvoiceLine"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Album" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="61"/><column index="2" value="219"/><column index="3" value="59"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Invoice" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="68"/><column index="2" value="83"/><column index="3" value="129"/><column index="4" value="264"/><column index="5" value="132"/><column index="6" value="80"/><column index="7" value="96"/><column index="8" value="116"/><column index="9" value="53"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="V_AvgTotal" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="397"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="V_Tracks_InvoiceLine" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="68"/><column index="2" value="65"/><column index="3" value="64"/><column index="4" value="134"/><column index="5" value="204"/><column index="6" value="84"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="CASE WHEN THEN END">SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity,
	total,
	CASE
	WHEN total &lt; 2.00 THEN 'Baseline Purchase'
	WHEN total BETWEEN 2.00 AND 6.99 THEN 'Low Purchase'
	WHEN total BETWEEN 7.00 AND 15.00 THEN 'Target Purchase'
	ELSE 'Top Performer'
	END AS PurchaseType
FROM
	Invoice
WHERE	
	PurchaseType = 'Top Performer'
ORDER BY
	BillingCity</sql><sql name="JOINS">SELECT
	i.InvoiceId,
	c.LastName,
	c.FirstName,
	i.BillingAddress,
	i.BillingCity,
	i.BillingState,
	i.BillingPostalCode,
	i.BillingCountry,
	i.total
FROM
	Invoice AS i
INNER JOIN
	Customer AS c
ON
	i.CustomerId = c.CustomerId
ORDER BY
	c.CustomerId</sql><sql name="Multiple Table Join">SELECT 
	e.EmployeeId,
	e.FirstName AS &quot;Employee First Name&quot;,
	e.LastName AS &quot;Employee Last Name&quot;,
	i.CustomerId,
	c.FirstName AS &quot;Customer First Name&quot;,
	c.LastName AS &quot;Customer Last Name&quot;,
	c.SupportRepId,
	i.total	
FROM 
	INVOICE AS i
INNER JOIN
	Customer AS c
ON
	i.CustomerId = c.CustomerId
INNER JOIN
	Employee AS e
ON
	c.SupportRepId = e.EmployeeId
ORDER BY 
	i.total DESC
LIMIT 10</sql><sql name="String Functions">SELECT
	FirstName,
	LastName,
	Address,
	FirstName || ' ' || LastName || ' ' || Address || ', ' || City || ' ' || State || ' ' || PostalCode AS [Mailing Address],
	length(PostalCode),
	substr(PostalCode, 1, 5) AS [5 Digit Postal Code],
	upper(FirstName) AS [First Name All Caps],
	lower(LastName) AS [Last Name All Lower],
FROM
	Customer
WHERE
	Country = 'USA'
</sql><sql name="Date Functions">SELECT
	LastName,
	FirstName,
	BirthDate,
	strftime('%Y-%m-%d',BirthDate) AS [Birthdate No Time Code],
	strftime('%Y-%m-%d','now') - strftime('%Y-%m-%d', BirthDate) AS [Age]
FROM
	Employee</sql><sql name="Aggregate Functions">SELECT
	SUM(total) AS [Total Sales],
	AVG(total) AS [Average Sales],
	MAX(total) AS [Max Sales],
	MIN(total) AS [Min Sales],
	COUNT(*) AS [Sales Count]
FROM
	Invoice</sql><sql name="Nested Functions">SELECT
	SUM(total) AS [Total Sales],
	round(AVG(total),2) AS [Average Sales],
	MAX(total) AS [Max Sales],
	MIN(total) AS [Min Sales],
	COUNT(*) AS [Sales Count]
FROM
	Invoice</sql><sql name="Grouping">SELECT
	ROUND(AVG(total), 2) AS [Average Invoice Total],
	BillingCity,
	BillingCountry
FROM
	Invoice	
WHERE
	BillingCity NOT NULL
GROUP BY
	BillingCity, BillingCountry
HAVING
	avg(total) &gt; 5
ORDER BY
	BillingCountry</sql><sql name="Nesting">SELECT
	TrackId,
	Composer,
	Name
FROM
	Track
WHERE
	TrackId NOT IN
		(SELECT
			DISTINCT
			TrackId
		FROM
			InvoiceLine
		ORDER BY
			TrackId)</sql><sql name="Views">CREATE VIEW V_Tracks_InvoiceLine AS
SELECT
	il.InvoiceId,
	il.UnitPrice,
	il.Quantity,
	t.Name,
	t.Composer,
	t.Milliseconds
FROM
	InvoiceLine il
INNER JOIN
	Track t
ON
	il.TrackID = t.TrackId</sql><sql name="SQL 14">SELECT
	g.name AS [Genre],
	avg(t.Milliseconds) AS [AverageDuration]
FROM
	Track t
INNER JOIN
	Genre g
ON
	t.GenreId = g.GenreId
GROUP BY
	g.Name
ORDER BY
	AverageDuration DESC
LIMIT 5</sql><current_tab id="10"/></tab_sql></sqlb_project>
